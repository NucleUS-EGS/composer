version: '3'

services:
  # Nginx
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth
      - events
      - points
      - web

  # Auth service
  auth:
    image: auth:latest
    build:
      context: .
      dockerfile: auth.dockerfile
    restart: always
    env_file:
      - auth.env
    volumes:
      - ./auth:/app
    depends_on:
      auth_db:
        condition: service_healthy

  auth_db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: auth
    ports:
      - 3301:3306
    volumes:
      - auth_data:/data/db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10


  # Events service
  events:
    image: events:latest
    build:
      context: .
      dockerfile: events.dockerfile
    restart: always
    env_file:
      - events.env
    volumes:
      - ./events:/app
    depends_on:
      events_db:
        condition: service_healthy

  events_db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: events
    ports:
      - "3302:3306"
    volumes:
      - events_data:/data/db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Points service
  points:
    image: points:latest
    build:
      context: .
      dockerfile: points.dockerfile
    restart: always
    env_file:
      - points.env
    volumes:
      - ./points:/app
    depends_on:
      points_db:
        condition: service_healthy

  points_db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: EGS2324pass!
      MYSQL_DATABASE: POINTS
    ports:
      - 3303:3306
    volumes:
      - points_data:/data/db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10


  #Webapp
  web:
    image: webapp:latest
    build:
      context: .
      dockerfile: webapp.dockerfile
    restart: always
    env_file:
      - webapp.env
    volumes:
      - ./webapp:/app
    depends_on:
      web_db:
        condition: service_healthy

  web_db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: webapp
    ports:
      - 3300:3306
    volumes:
      - web_data:/data/db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10


  # Adminer
  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080

volumes:
  auth_data:
  events_data:
  points_data:
  web_data: