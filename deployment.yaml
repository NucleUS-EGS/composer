# webapp deployment
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: webapp
  namespace: egs-nucleus
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: registry.deti/egs-nucleus/webapp:v2
        ports:
        - containerPort: 3000
        env:
        - name: DB_NAME
          value: webapp
        - name: DB_HOST
          value: webapp-db
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          value: password
        - name: API_URL
          value: web:3000/api/v1
        - name: AUTH_SERVICE_URL
          value: auth:5000/v1
        - name: AUTH_SERVICE_API_KEY
          value: 892a04b7-683c-47c9-a345-b9e83acc1a62
        - name: POINTS_SERVICE_URL
          value: points:5002/v1
        - name: POINTS_SERVICE_API_KEY
          value: b899dd7f-b658-457a-8427-5c9ed02957aa
        - name: EVENTS_SERVICE_URL
          value: events:5001/v1
        - name: EVENTS_SERVICE_API_KEY
          value: 05493297-de9e-48a5-b428-71586e04875
        - name: PORT
          value: "80"

# webapp service
---
apiVersion: v1
kind: Service
metadata:
  name: webapp
  namespace: egs-nucleus
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: webapp


# webapp mysql deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-db
  namespace: egs-nucleus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp-db
  template:
    metadata:
      labels:
        app: webapp-db
    spec:
      containers:
      - name: webapp-db
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: webapp
        volumeMounts:
        - name: webapp-db-pvc
          mountPath: /data/db
      volumes:
      - name: webapp-db-pvc
        persistentVolumeClaim:
          claimName: webapp-db-pvc

# webapp mysql service
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-db
  namespace: egs-nucleus
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: webapp-db

# webapp mysql data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: webapp-db-pvc
  namespace: egs-nucleus
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 20Mi


# auth deployment
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: auth
  namespace: egs-nucleus
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
      - name: auth
        image: registry.deti/egs-nucleus/auth:v3
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_RUN_PORT
          value: "5000"
        - name: FLASK_RUN_HOST
          value: "0.0.0.0"
        - name: IDP_BASE_URL
          value: "https://wso2-gw.ua.pt"
        - name: IDP_REDIRECT_URI
          value: "http://localhost:5000"
        - name: CLIENT_ID
          value: "agh44RajMJcYvCIq3lSMrutfPJ0a"
        - name: CLIENT_SECRET
          value: "WJckU0FSb41rsJHLnFPYqBFvSZoa"
        - name: HOST
          value: "auth-db"
        - name: PORT
          value: "3306"
        - name: USER_NAME
          value: "root"
        - name: PASSWORD
          value: "password"
        - name: DATABASE
          value: "auth"
        - name: API_KEY
          value: 892a04b7-683c-47c9-a345-b9e83acc1a62
        - name: FRONTEND_BASE_URL
          value: "/"

# auth service
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: egs-nucleus
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: auth


# auth mysql deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db
  namespace: egs-nucleus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
      - name: auth-db
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_DATABASE
          value: auth
        volumeMounts:
        - name: auth-db-pvc
          mountPath: /data/db
      volumes:
      - name: auth-db-pvc
        persistentVolumeClaim:
          claimName: auth-db-pvc

# auth mysql service
---
apiVersion: v1
kind: Service
metadata:
  name: auth-db
  namespace: egs-nucleus
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: auth-db

# auth mysql data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-db-pvc
  namespace: egs-nucleus
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 20Mi


# points deployment
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: points
  namespace: egs-nucleus
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: points
  template:
    metadata:
      labels:
        app: points
    spec:
      containers:
      - name: points
        image: registry.deti/egs-nucleus/points:v6
        ports:
        - containerPort: 5002
        env:
        - name: FLASK_RUN_PORT
          value: "5002"
        - name: FLASK_RUN_HOST
          value: "0.0.0.0"
        - name: DBMS
          value: "mysql"
        - name: USER_NAME
          value: "root"
        - name: PASSWORD
          value: "EGS2324pass!"
        - name: DATABASE
          value: "POINTS"
        - name: HOST
          value: "points-db"
        - name: PORT
          value: "3306"
        - name: APIKEY
          value: b899dd7f-b658-457a-8427-5c9ed02957aa   

# points service
---
apiVersion: v1
kind: Service
metadata:
  name: points
  namespace: egs-nucleus
spec:
  ports:
  - port: 5002
    targetPort: 5002
  selector:
    app: points


# points mysql deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: points-db
  namespace: egs-nucleus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: points-db
  template:
    metadata:
      labels:
        app: points-db
    spec:
      containers:
      - name: points-db
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "EGS2324pass!"
        - name: MYSQL_DATABASE
          value: POINTS
        volumeMounts:
        - name: points-db-pvc
          mountPath: /data/db
      volumes:
      - name: points-db-pvc
        persistentVolumeClaim:
          claimName: points-db-pvc

# points mysql service
---
apiVersion: v1
kind: Service
metadata:
  name: points-db
  namespace: egs-nucleus
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: points-db

# points mysql data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: points-db-pvc
  namespace: egs-nucleus
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 20Mi

# events deployment
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: events
  namespace: egs-nucleus
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: events
  template:
    metadata:
      labels:
        app: events
    spec:
      containers:
      - name: events
        image: registry.deti/egs-nucleus/events:v9
        ports:
        - containerPort: 5001
        env:
        - name: FLASK_RUN_PORT
          value: "5001"
        - name: FLASK_RUN_HOST
          value: "0.0.0.0"
        - name: DBMS
          value: "mysql"
        - name: USER_NAME
          value: "root"
        - name: PASSWORD
          value: "password"
        - name: DATABASE
          value: "events"
        - name: HOST
          value: "events-db"
        - name: PORT
          value: "3306"       
        - name: APIKEY
          value: 05493297-de9e-48a5-b428-71586e04875  

# events service
---
apiVersion: v1
kind: Service
metadata:
  name: events
  namespace: egs-nucleus
spec:
  ports:
  - port: 5001
    targetPort: 5001
  selector:
    app: events


# events mysql deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-db
  namespace: egs-nucleus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: events-db
  template:
    metadata:
      labels:
        app: events-db
    spec:
      containers:
      - name: events-db
        image: mysql:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        - name: MYSQL_DATABASE
          value: events
        volumeMounts:
        - name: events-db-pvc
          mountPath: /data/db
      volumes:
      - name: events-db-pvc
        persistentVolumeClaim:
          claimName: events-db-pvc

# events mysql service
---
apiVersion: v1
kind: Service
metadata:
  name: events-db
  namespace: egs-nucleus
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: events-db

# points mysql data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: events-db-pvc
  namespace: egs-nucleus
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 20Mi


# nginx deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: egs-nucleus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: registry.deti/egs-nucleus/nginx:v2
          name: nginx
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always

# nginx service
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: egs-nucleus
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

# Configure Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-k3s
  namespace: egs-nucleus
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: grupo5-egs-deti.ua.pt
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port: 
              number: 80
